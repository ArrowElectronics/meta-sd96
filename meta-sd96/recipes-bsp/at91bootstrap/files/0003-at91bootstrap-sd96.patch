diff -Naurw ./board/Config.in ../git/board/Config.in
--- ./board/Config.in	2020-12-17 09:57:56.502365343 +0100
+++ ../git/board/Config.in	2020-12-17 09:57:43.151013205 +0100
@@ -25,6 +25,7 @@
 source "board/sama5d4_xplained/Config.in.board"
 source "board/sama5d2_ptc_ek/Config.in.board"
 source "board/sama5d2_xplained/Config.in.board"
+source "board/sama5d27_sd96/Config.in.board"
 source "board/sama5d27_som1_ek/Config.in.board"
 source "board/sama5d27_wlsom1_ek/Config.in.board"
 source "board/sama5d2_lpddr2sip_vb/Config.in.board"
@@ -56,6 +57,7 @@
 	default "sama5d4ek" if SAMA5D4EK
 	default "sama5d2_ptc_ek" if SAMA5D2_PTC_EK
 	default "sama5d2_xplained" if SAMA5D2_XPLAINED
+	default "sama5d27_sd96" if SAMA5D27_SD96
 	default "sama5d27_som1_ek" if SAMA5D27_SOM1_EK
 	default "sama5d27_wlsom1_ek" if SAMA5D27_WLSOM1_EK
 	default "sama5d2_lpddr2sip_vb" if SAMA5D2_LPDDR2SIP_VB
@@ -412,6 +414,7 @@
 	default CPU_CLK_492MHZ if SAMA5D27_SOM1_EK
 	default CPU_CLK_492MHZ if SAMA5D27_WLSOM1_EK
 	default CPU_CLK_498MHZ if SAMA5D2_LPDDR2SIP_VB
+	default CPU_CLK_498MHZ if SAMA5D27_SD96
 
 
 config	CPU_CLK_166MHZ
diff -Naurw ./board/sama5d27_sd96/board.mk ../git/board/sama5d27_sd96/board.mk
--- ./board/sama5d27_sd96/board.mk	1970-01-01 01:00:00.000000000 +0100
+++ ../git/board/sama5d27_sd96/board.mk	2020-12-17 09:57:43.151013205 +0100
@@ -0,0 +1,2 @@
+CPPFLAGS += -DCONFIG_SAMA5D27_SD96
+ASFLAGS += -DCONFIG_SAMA5D27_SD96
diff -Naurw ./board/sama5d27_sd96/Config.in.board ../git/board/sama5d27_sd96/Config.in.board
--- ./board/sama5d27_sd96/Config.in.board	1970-01-01 01:00:00.000000000 +0100
+++ ../git/board/sama5d27_sd96/Config.in.board	2020-12-17 09:57:43.151013205 +0100
@@ -0,0 +1,12 @@
+config SAMA5D27_SD96
+	bool "sama5d27_sd96"
+	select SAMA5D2
+	select CPU_V7
+	select DDRC
+	select ALLOW_DATAFLASH
+	select ALLOW_SDCARD
+	select ALLOW_CPU_CLK_498MHZ
+	select ALLOW_CRYSTAL_12_000MHZ
+	select SUPPORT_BUS_SPEED_166MHZ
+	help
+	  Use the SD96 Development board
diff -Naurw ./board/sama5d27_sd96/Config.in.linux_arg ../git/board/sama5d27_sd96/Config.in.linux_arg
--- ./board/sama5d27_sd96/Config.in.linux_arg	1970-01-01 01:00:00.000000000 +0100
+++ ../git/board/sama5d27_sd96/Config.in.linux_arg	2020-12-17 09:57:43.151013205 +0100
@@ -0,0 +1,2 @@
+config LINUX_KERNEL_ARG_STRING
+	default "console=ttyS0,115200 earlyprintk root=/dev/mmcblk0p2 rw rootwait" if SAMA5D27_SD96 && (SDCARD || QSPI)
diff -Naurw ./board/sama5d27_sd96/sama5d27_sd96.c ../git/board/sama5d27_sd96/sama5d27_sd96.c
--- ./board/sama5d27_sd96/sama5d27_sd96.c	1970-01-01 01:00:00.000000000 +0100
+++ ../git/board/sama5d27_sd96/sama5d27_sd96.c	2020-12-17 09:57:43.151013205 +0100
@@ -0,0 +1,572 @@
+/* ----------------------------------------------------------------------------
+ *         Microchip Microcontroller Software Support
+ * ----------------------------------------------------------------------------
+ * Copyright (c) 2017, Microchip Corporation
+ *
+ * All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions are met:
+ *
+ * - Redistributions of source code must retain the above copyright notice,
+ * this list of conditions and the disclaimer below.
+ *
+ * Microchip's name may not be used to endorse or promote products derived from
+ * this software without specific prior written permission.
+ *
+ * DISCLAIMER: THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR
+ * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
+ * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
+ * DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT, INDIRECT,
+ * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
+ * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
+ * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
+ * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
+ * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+#include "common.h"
+#include "ddramc.h"
+#include "debug.h"
+#include "gpio.h"
+#include "hardware.h"
+#include "l2cc.h"
+#include "matrix.h"
+#include "pmc.h"
+#include "sama5d27_sd96.h"
+#include "string.h"
+#include "timer.h"
+#include "usart.h"
+#include "watchdog.h"
+#include "sdhc_cal.h"
+#include "arch/at91_ddrsdrc.h"
+#include "arch/at91_pio.h"
+#include "arch/at91_pmc/pmc.h"
+#include "arch/at91_rstc.h"
+#include "arch/at91_sfr.h"
+#include "arch/tz_matrix.h"
+
+static void at91_dbgu_hw_init(void)
+{
+	const struct pio_desc dbgu_pins[] = {
+		{"RXD1", CONFIG_SYS_DBGU_RXD_PIN, 0, PIO_DEFAULT, PIO_PERIPH_A},
+		{"TXD1", CONFIG_SYS_DBGU_TXD_PIN, 0, PIO_DEFAULT, PIO_PERIPH_A},
+		{(char *)0, 0, 0, PIO_DEFAULT, PIO_PERIPH_A},
+	};
+
+	pio_configure(dbgu_pins);
+	pmc_enable_periph_clock(CONFIG_SYS_DBGU_ID, PMC_PERIPH_CLK_DIVIDER_NA);
+}
+
+static void initialize_dbgu(void)
+{
+	unsigned int baudrate = 115200;
+
+	at91_dbgu_hw_init();
+
+	if (pmc_mck_check_h32mxdiv())
+		usart_init(BAUDRATE(MASTER_CLOCK / 2, baudrate));
+	else
+		usart_init(BAUDRATE(MASTER_CLOCK, baudrate));
+}
+
+#if defined(CONFIG_MATRIX)
+static int matrix_configure_slave(void)
+{
+	unsigned int ddr_port;
+	unsigned int ssr_setting, sasplit_setting, srtop_setting;
+
+	/*
+	 * Matrix 0 (H64MX)
+	 */
+
+	/*
+	 * 0: Bridge from H64MX to AXIMX
+	 * (Internal ROM, Crypto Library, PKCC RAM): Always Secured
+	 */
+
+	/* 1: H64MX Peripheral Bridge */
+
+	/* 2 ~ 9 DDR2 Port0 ~ 7: Non-Secure */
+	srtop_setting = MATRIX_SRTOP(0, MATRIX_SRTOP_VALUE_128M);
+	sasplit_setting = MATRIX_SASPLIT(0, MATRIX_SASPLIT_VALUE_128M);
+	ssr_setting = MATRIX_LANSECH_NS(0) |
+		      MATRIX_RDNSECH_NS(0) |
+		      MATRIX_WRNSECH_NS(0);
+	for (ddr_port = 0; ddr_port < 8; ddr_port++) {
+		matrix_configure_slave_security(AT91C_BASE_MATRIX64,
+					(H64MX_SLAVE_DDR2_PORT_0 + ddr_port),
+					srtop_setting,
+					sasplit_setting,
+					ssr_setting);
+	}
+
+	/*
+	 * 10: Internal SRAM 128K
+	 * TOP0 is set to 128K
+	 * SPLIT0 is set to 64K
+	 * LANSECH0 is set to 0, the low area of region 0 is the Securable one
+	 * RDNSECH0 is set to 0, region 0 Securable area is secured for reads.
+	 * WRNSECH0 is set to 0, region 0 Securable area is secured for writes
+	 */
+	srtop_setting = MATRIX_SRTOP(0, MATRIX_SRTOP_VALUE_128K);
+	sasplit_setting = MATRIX_SASPLIT(0, MATRIX_SASPLIT_VALUE_64K);
+	ssr_setting = MATRIX_LANSECH_S(0) |
+		      MATRIX_RDNSECH_S(0) |
+		      MATRIX_WRNSECH_S(0);
+	matrix_configure_slave_security(AT91C_BASE_MATRIX64,
+					H64MX_SLAVE_INTERNAL_SRAM,
+					srtop_setting,
+					sasplit_setting,
+					ssr_setting);
+
+	/* 11:  Internal SRAM 128K (Cache L2) */
+	/* 12:  QSPI0 */
+	/* 13:  QSPI1 */
+	/* 14:  AESB */
+
+	/*
+	 * Matrix 1 (H32MX)
+	 */
+
+	/* 0: Bridge from H32MX to H64MX: Not Secured */
+
+	/* 1: H32MX Peripheral Bridge 0: Not Secured */
+
+	/* 2: H32MX Peripheral Bridge 1: Not Secured */
+
+	/*
+	 * 3: External Bus Interface
+	 * EBI CS0 Memory(256M) ----> Slave Region 0, 1
+	 * EBI CS1 Memory(256M) ----> Slave Region 2, 3
+	 * EBI CS2 Memory(256M) ----> Slave Region 4, 5
+	 * EBI CS3 Memory(128M) ----> Slave Region 6
+	 * NFC Command Registers(128M) -->Slave Region 7
+	 *
+	 * NANDFlash(EBI CS3) --> Slave Region 6: Non-Secure
+	 */
+	srtop_setting =	MATRIX_SRTOP(6, MATRIX_SRTOP_VALUE_128M) |
+			MATRIX_SRTOP(7, MATRIX_SRTOP_VALUE_128M);
+	sasplit_setting = MATRIX_SASPLIT(6, MATRIX_SASPLIT_VALUE_128M) |
+			  MATRIX_SASPLIT(7, MATRIX_SASPLIT_VALUE_128M);
+	ssr_setting = MATRIX_LANSECH_NS(6) |
+		      MATRIX_RDNSECH_NS(6) |
+		      MATRIX_WRNSECH_NS(6) |
+		      MATRIX_LANSECH_NS(7) |
+		      MATRIX_RDNSECH_NS(7) |
+		      MATRIX_WRNSECH_NS(7);
+	matrix_configure_slave_security(AT91C_BASE_MATRIX32,
+					H32MX_EXTERNAL_EBI,
+					srtop_setting,
+					sasplit_setting,
+					ssr_setting);
+
+	/* 4: NFC SRAM (4K): Non-Secure */
+	srtop_setting = MATRIX_SRTOP(0, MATRIX_SRTOP_VALUE_8K);
+	sasplit_setting = MATRIX_SASPLIT(0, MATRIX_SASPLIT_VALUE_8K);
+	ssr_setting = MATRIX_LANSECH_NS(0) |
+		      MATRIX_RDNSECH_NS(0) |
+		      MATRIX_WRNSECH_NS(0);
+	matrix_configure_slave_security(AT91C_BASE_MATRIX32,
+					H32MX_NFC_SRAM,
+					srtop_setting,
+					sasplit_setting,
+					ssr_setting);
+
+	/* 5:
+	 * USB Device High Speed Dual Port RAM (DPR): 1M
+	 * USB Host OHCI registers: 1M
+	 * USB Host EHCI registers: 1M
+	 */
+	srtop_setting = MATRIX_SRTOP(0, MATRIX_SRTOP_VALUE_1M) |
+			MATRIX_SRTOP(1, MATRIX_SRTOP_VALUE_1M) |
+			MATRIX_SRTOP(2, MATRIX_SRTOP_VALUE_1M);
+	sasplit_setting = MATRIX_SASPLIT(0, MATRIX_SASPLIT_VALUE_1M) |
+			  MATRIX_SASPLIT(1, MATRIX_SASPLIT_VALUE_1M) |
+			  MATRIX_SASPLIT(2, MATRIX_SASPLIT_VALUE_1M);
+	ssr_setting = MATRIX_LANSECH_NS(0) |
+		      MATRIX_LANSECH_NS(1) |
+		      MATRIX_LANSECH_NS(2) |
+		      MATRIX_RDNSECH_NS(0) |
+		      MATRIX_RDNSECH_NS(1) |
+		      MATRIX_RDNSECH_NS(2) |
+		      MATRIX_WRNSECH_NS(0) |
+		      MATRIX_WRNSECH_NS(1) |
+		      MATRIX_WRNSECH_NS(2);
+	matrix_configure_slave_security(AT91C_BASE_MATRIX32,
+					H32MX_USB,
+					srtop_setting,
+					sasplit_setting,
+					ssr_setting);
+
+	return 0;
+}
+
+static unsigned int security_ps_peri_id[] = {
+	0,
+};
+
+static int matrix_config_periheral(void)
+{
+	unsigned int *peri_id = security_ps_peri_id;
+	unsigned int array_size = sizeof(security_ps_peri_id) /
+				  sizeof(unsigned int);
+	int ret;
+
+	ret = matrix_configure_peri_security(peri_id, array_size);
+	if (ret)
+		return -1;
+
+	return 0;
+}
+
+static int matrix_init(void)
+{
+	int ret;
+
+	matrix_write_protect_disable(AT91C_BASE_MATRIX64);
+	matrix_write_protect_disable(AT91C_BASE_MATRIX32);
+
+	ret = matrix_configure_slave();
+	if (ret)
+		return -1;
+
+	ret = matrix_config_periheral();
+	if (ret)
+		return -1;
+
+	return 0;
+}
+#endif
+
+#ifdef CONFIG_DDR2
+static void ddramc_reg_config(struct ddramc_register *ddramc_config)
+{
+	ddramc_config->mdr = AT91C_DDRC2_DBW_16_BITS |
+			     AT91C_DDRC2_MD_DDR2_SDRAM;
+
+	ddramc_config->cr = AT91C_DDRC2_NC_DDR10_SDR9 |
+			    AT91C_DDRC2_NR_13 |
+			    AT91C_DDRC2_CAS_3 |
+			    AT91C_DDRC2_DISABLE_RESET_DLL |
+			    AT91C_DDRC2_WEAK_STRENGTH_RZQ7 |
+			    AT91C_DDRC2_ENABLE_DLL |
+			    AT91C_DDRC2_NB_BANKS_8 |
+			    AT91C_DDRC2_NDQS_ENABLED |
+			    AT91C_DDRC2_DECOD_INTERLEAVED |
+			    AT91C_DDRC2_UNAL_SUPPORTED;
+
+	/*
+	 * With DDRCK running at 164 MHz (DDRCK = 2 x MCK / 2),
+	 * MPDDRC_RTR.COUNT should equal 0x4ff, which results in tREFI
+	 * (COUNT / MASTER_CLOCK) remaining under 7.8 us (Winbond's max).
+	 */
+	ddramc_config->rtr = 0x4FF;
+
+	ddramc_config->t0pr = AT91C_DDRC2_TRAS_(7) |
+			      AT91C_DDRC2_TRCD_(3) |
+			      AT91C_DDRC2_TWR_(3) |
+			      AT91C_DDRC2_TRC_(9) |
+			      AT91C_DDRC2_TRP_(3) |
+			      AT91C_DDRC2_TRRD_(2) |
+			      AT91C_DDRC2_TWTR_(2) |
+			      AT91C_DDRC2_TMRD_(2);
+
+	ddramc_config->t1pr = AT91C_DDRC2_TRFC_(22) |
+			      AT91C_DDRC2_TXSNR_(23) |
+			      AT91C_DDRC2_TXSRD_(200) |
+			      AT91C_DDRC2_TXP_(2);
+
+	ddramc_config->t2pr = AT91C_DDRC2_TXARD_(2) |
+			      AT91C_DDRC2_TXARDS_(8) |
+			      AT91C_DDRC2_TRPA_(4) |
+			      AT91C_DDRC2_TRTP_(2) |
+			      AT91C_DDRC2_TFAW_(8);
+}
+
+static void ddr2_init(void)
+{
+	struct ddramc_register ddramc_reg;
+	unsigned int reg;
+
+	ddramc_reg_config(&ddramc_reg);
+
+	pmc_enable_periph_clock(AT91C_ID_MPDDRC, PMC_PERIPH_CLK_DIVIDER_NA);
+	pmc_enable_system_clock(AT91C_PMC_DDR);
+
+	reg = AT91C_MPDDRC_RD_DATA_PATH_ONE_CYCLES;
+	writel(reg, (AT91C_BASE_MPDDRC + MPDDRC_RD_DATA_PATH));
+
+	reg = readl(AT91C_BASE_MPDDRC + MPDDRC_IO_CALIBR);
+	reg &= ~AT91C_MPDDRC_RDIV;
+	reg &= ~AT91C_MPDDRC_TZQIO;
+	reg |= AT91C_MPDDRC_RDIV_DDR2_RZQ_50;
+	reg |= AT91C_MPDDRC_TZQIO_(101);
+	writel(reg, (AT91C_BASE_MPDDRC + MPDDRC_IO_CALIBR));
+
+	ddram_initialize(AT91C_BASE_MPDDRC, AT91C_BASE_DDRCS, &ddramc_reg);
+
+	ddramc_dump_regs(AT91C_BASE_MPDDRC);
+}
+#endif
+
+/**
+ * The MSBs [bits 31:16] of the CAN Message RAM for CAN0 and CAN1
+ * are configured in 0x210000, instead of the default configuration
+ * 0x200000, to avoid conflict with SRAM map for PM.
+ */
+#define CAN_MESSAGE_RAM_MSB	0x21
+
+void at91_init_can_message_ram(void)
+{
+	writel(AT91C_CAN0_MEM_ADDR_(CAN_MESSAGE_RAM_MSB) |
+	       AT91C_CAN1_MEM_ADDR_(CAN_MESSAGE_RAM_MSB),
+	       (AT91C_BASE_SFR + SFR_CAN));
+}
+
+static void led_hw_init(void)
+{
+	const struct pio_desc led_pins[] = {
+		{"LED_RED", CONFIG_SYS_LED_RED_PIN, 0, PIO_PULLUP, PIO_OUTPUT},
+		{"LED_GREEN", CONFIG_SYS_LED_GREEN_PIN, 0, PIO_PULLUP, PIO_OUTPUT},
+		{"LED_BLUE", CONFIG_SYS_LED_BLUE_PIN, 0, PIO_PULLUP, PIO_OUTPUT},
+		{(char *)0, 0, 0, PIO_DEFAULT, PIO_PERIPH_A}
+	};
+
+	pio_configure(led_pins);
+}
+
+static void at91_led_on(void)
+{
+	pio_set_gpio_output(CONFIG_SYS_LED_GREEN_PIN, 1);
+}
+
+static void sdmmc_cal_setup(void)
+{
+	unsigned int cidr, exid;
+	unsigned int reg;
+
+	/* Identify SAMA5D2 SiP that are concerned by the errata */
+	cidr = readl(AT91C_BASE_CHIPID + CHIPID_CIDR);
+	if ((cidr & 0x7fffffe0) != SAMA5D2_CIDR)
+		return;
+
+	exid = readl(AT91C_BASE_CHIPID + CHIPID_EXID);
+	if (exid != SAMA5D225C_D1M_EXID
+	 && exid != SAMA5D27C_D1G_EXID
+	 && exid != SAMA5D28C_D1G_EXID)
+		return;
+
+	/*
+	 * Even if SDMMC interfaces are not in use, enable the
+	 * calibration analog cell and make it remain powered after
+	 * calibration procedure is done.
+	 * It's needed on SDMMC0 only
+	 */
+	dbg_loud("Applying VDDSDMMC errata to ID: %x\n", exid);
+
+	/* Enable peripheral clock */
+	pmc_enable_periph_clock(AT91C_ID_SDMMC0, PMC_PERIPH_CLK_DIVIDER_NA);
+
+	/* Launch calibration and wait till it's completed */
+	reg = readl(AT91C_BASE_SDHC0 + SDMMC_CALCR);
+	reg |= SDMMC_CALCR_ALWYSON | SDMMC_CALCR_EN;
+	writel(reg, AT91C_BASE_SDHC0 + SDMMC_CALCR);
+	while (readl(AT91C_BASE_SDHC0 + SDMMC_CALCR) & SDMMC_CALCR_EN)
+		;
+
+	/* Disable peripheral clock */
+	pmc_disable_periph_clock(AT91C_ID_SDMMC0);
+}
+
+
+#ifdef CONFIG_HW_INIT
+void hw_init(void)
+{
+	at91_disable_wdt();
+
+	led_hw_init();
+
+	at91_led_on();
+
+	pmc_cfg_plla(PLLA_SETTINGS);
+
+	/* Initialize PLLA charge pump */
+	/*
+	 * The field named ICP_PLLA[1:0] must be written to 0.
+	 * Even if its default value is 0, it is wrongly re-written to 0x3
+	 * by the ROMCode.
+	 */
+	pmc_init_pll(AT91C_PMC_ICPPLLA_0);
+
+	pmc_mck_cfg_set(0, BOARD_PRESCALER_PLLA,
+			AT91C_PMC_H32MXDIV | AT91C_PMC_PLLADIV2 |
+			AT91C_PMC_MDIV | AT91C_PMC_CSS);
+
+	writel(AT91C_RSTC_KEY_UNLOCK | AT91C_RSTC_URSTEN,
+	       AT91C_BASE_RSTC + RSTC_RMR);
+
+#ifdef CONFIG_MATRIX
+	matrix_init();
+#endif
+	initialize_dbgu();
+
+	timer_init();
+
+#ifdef CONFIG_DDR2
+	ddr2_init();
+#endif
+	l2cache_prepare();
+
+	at91_init_can_message_ram();
+
+	/* SiP: Implement the VDDSDMMC power supply over-consumption errata */
+	sdmmc_cal_setup();
+}
+#endif
+
+#ifdef CONFIG_QSPI
+void at91_qspi_hw_init(void)
+{
+#if defined(CONFIG_QSPI_BUS0)
+#if defined(CONFIG_QSPI0_IOSET_1)
+	const struct pio_desc qspi_pins[] = {
+		{"QSPI0_SCK",	AT91C_PIN_PA(0), 0, PIO_DEFAULT, PIO_PERIPH_B},
+		{"QSPI0_CS",	AT91C_PIN_PA(1), 0, PIO_DEFAULT, PIO_PERIPH_B},
+		{"QSPI0_IO0",	AT91C_PIN_PA(2), 0, PIO_DEFAULT, PIO_PERIPH_B},
+		{"QSPI0_IO1",	AT91C_PIN_PA(3), 0, PIO_DEFAULT, PIO_PERIPH_B},
+		{"QSPI0_IO2",	AT91C_PIN_PA(4), 0, PIO_DEFAULT, PIO_PERIPH_B},
+		{"QSPI0_IO3",	AT91C_PIN_PA(5), 0, PIO_DEFAULT, PIO_PERIPH_B},
+		{(char *)0, 0, 0, PIO_DEFAULT, PIO_PERIPH_A},
+	};
+#elif defined(CONFIG_QSPI0_IOSET_2)
+	const struct pio_desc qspi_pins[] = {
+		{"QSPI0_SCK",	AT91C_PIN_PA(14), 0, PIO_DEFAULT, PIO_PERIPH_C},
+		{"QSPI0_CS",	AT91C_PIN_PA(15), 0, PIO_DEFAULT, PIO_PERIPH_C},
+		{"QSPI0_IO0",	AT91C_PIN_PA(16), 0, PIO_DEFAULT, PIO_PERIPH_C},
+		{"QSPI0_IO1",	AT91C_PIN_PA(17), 0, PIO_DEFAULT, PIO_PERIPH_C},
+		{"QSPI0_IO2",	AT91C_PIN_PA(18), 0, PIO_DEFAULT, PIO_PERIPH_C},
+		{"QSPI0_IO3",	AT91C_PIN_PA(19), 0, PIO_DEFAULT, PIO_PERIPH_C},
+		{(char *)0, 0, 0, PIO_DEFAULT, PIO_PERIPH_A},
+	};
+#elif defined(CONFIG_QSPI0_IOSET_3)
+	const struct pio_desc qspi_pins[] = {
+		{"QSPI0_SCK",	AT91C_PIN_PA(22), 0, PIO_DEFAULT, PIO_PERIPH_F},
+		{"QSPI0_CS",	AT91C_PIN_PA(23), 0, PIO_DEFAULT, PIO_PERIPH_F},
+		{"QSPI0_IO0",	AT91C_PIN_PA(24), 0, PIO_DEFAULT, PIO_PERIPH_F},
+		{"QSPI0_IO1",	AT91C_PIN_PA(25), 0, PIO_DEFAULT, PIO_PERIPH_F},
+		{"QSPI0_IO2",	AT91C_PIN_PA(26), 0, PIO_DEFAULT, PIO_PERIPH_F},
+		{"QSPI0_IO3",	AT91C_PIN_PA(27), 0, PIO_DEFAULT, PIO_PERIPH_F},
+		{(char *)0, 0, 0, PIO_DEFAULT, PIO_PERIPH_A},
+	};
+#else
+#error "No QSPI0 IOSET defined"
+#endif
+
+#elif defined(CONFIG_QSPI_BUS1)
+
+#if defined(CONFIG_QSPI1_IOSET_1)
+	const struct pio_desc qspi_pins[] = {
+		{"QSPI1_SCK",	AT91C_PIN_PA(6),  0, PIO_DEFAULT, PIO_PERIPH_B},
+		{"QSPI1_CS",	AT91C_PIN_PA(11), 0, PIO_DEFAULT, PIO_PERIPH_B},
+		{"QSPI1_IO0",	AT91C_PIN_PA(7),  0, PIO_DEFAULT, PIO_PERIPH_B},
+		{"QSPI1_IO1",	AT91C_PIN_PA(8),  0, PIO_DEFAULT, PIO_PERIPH_B},
+		{"QSPI1_IO2",	AT91C_PIN_PA(9),  0, PIO_DEFAULT, PIO_PERIPH_B},
+		{"QSPI1_IO3",	AT91C_PIN_PA(10), 0, PIO_DEFAULT, PIO_PERIPH_B},
+		{(char *)0, 0, 0, PIO_DEFAULT, PIO_PERIPH_A},
+	};
+#elif defined(CONFIG_QSPI1_IOSET_2)
+	const struct pio_desc qspi_pins[] = {
+		{"QSPI1_SCK",	AT91C_PIN_PB(5),  0, PIO_DEFAULT, PIO_PERIPH_D},
+		{"QSPI1_CS",	AT91C_PIN_PB(6),  0, PIO_DEFAULT, PIO_PERIPH_D},
+		{"QSPI1_IO0",	AT91C_PIN_PB(7),  0, PIO_DEFAULT, PIO_PERIPH_D},
+		{"QSPI1_IO1",	AT91C_PIN_PB(8),  0, PIO_DEFAULT, PIO_PERIPH_D},
+		{"QSPI1_IO2",	AT91C_PIN_PB(9),  0, PIO_DEFAULT, PIO_PERIPH_D},
+		{"QSPI1_IO3",	AT91C_PIN_PB(10), 0, PIO_DEFAULT, PIO_PERIPH_D},
+		{(char *)0, 0, 0, PIO_DEFAULT, PIO_PERIPH_A},
+	};
+#elif defined(CONFIG_QSPI1_IOSET_3)
+	const struct pio_desc qspi_pins[] = {
+		{"QSPI1_SCK",	AT91C_PIN_PB(14), 0, PIO_DEFAULT, PIO_PERIPH_E},
+		{"QSPI1_CS",	AT91C_PIN_PB(15), 0, PIO_DEFAULT, PIO_PERIPH_E},
+		{"QSPI1_IO0",	AT91C_PIN_PB(16), 0, PIO_DEFAULT, PIO_PERIPH_E},
+		{"QSPI1_IO1",	AT91C_PIN_PB(17), 0, PIO_DEFAULT, PIO_PERIPH_E},
+		{"QSPI1_IO2",	AT91C_PIN_PB(18), 0, PIO_DEFAULT, PIO_PERIPH_E},
+		{"QSPI1_IO3",	AT91C_PIN_PB(19), 0, PIO_DEFAULT, PIO_PERIPH_E},
+		{(char *)0, 0, 0, PIO_DEFAULT, PIO_PERIPH_A},
+	};
+#else
+#error "No QSPI1 IOSET defined"
+#endif
+#else
+#error "No QSPI Bus defined"
+#endif
+
+	pio_configure(qspi_pins);
+	pmc_enable_periph_clock(CONFIG_SYS_ID_QSPI, PMC_PERIPH_CLK_DIVIDER_NA);
+}
+#endif
+
+#ifdef CONFIG_SDCARD
+#ifdef CONFIG_OF_LIBFDT
+void at91_board_set_dtb_name(char *of_name)
+{
+	strcpy(of_name, "at91-sama5d27_sd96.dtb");
+}
+#endif
+
+#define ATMEL_SDHC_GCKDIV_VALUE		1
+
+void at91_sdhc_hw_init(void)
+{
+	unsigned int reg;
+
+#ifdef CONFIG_SDHC0
+	const struct pio_desc sdmmc_pins[] = {
+		{"SDMMC0_CK",   AT91C_PIN_PA(0), 0, PIO_DEFAULT, PIO_PERIPH_A},
+		{"SDMMC0_CMD",  AT91C_PIN_PA(1), 0, PIO_DEFAULT, PIO_PERIPH_A},
+		{"SDMMC0_DAT0", AT91C_PIN_PA(2), 0, PIO_DEFAULT, PIO_PERIPH_A},
+		{"SDMMC0_DAT1", AT91C_PIN_PA(3), 0, PIO_DEFAULT, PIO_PERIPH_A},
+		{"SDMMC0_DAT2", AT91C_PIN_PA(4), 0, PIO_DEFAULT, PIO_PERIPH_A},
+		{"SDMMC0_DAT3", AT91C_PIN_PA(5), 0, PIO_DEFAULT, PIO_PERIPH_A},
+		{"SDMMC0_DAT4", AT91C_PIN_PA(6), 0, PIO_DEFAULT, PIO_PERIPH_A},
+		{"SDMMC0_DAT5", AT91C_PIN_PA(7), 0, PIO_DEFAULT, PIO_PERIPH_A},
+		{"SDMMC0_DAT6", AT91C_PIN_PA(8), 0, PIO_DEFAULT, PIO_PERIPH_A},
+		{"SDMMC0_DAT7", AT91C_PIN_PA(9), 0, PIO_DEFAULT, PIO_PERIPH_A},
+		{"SDMMC0_RSTN", AT91C_PIN_PA(10), 0, PIO_DEFAULT, PIO_PERIPH_A},
+		{"SDMMC0_VDDSEL", AT91C_PIN_PA(11), 0, PIO_DEFAULT, PIO_PERIPH_A},
+		{"SDMMC0_WP",   AT91C_PIN_PA(12), 1, PIO_DEFAULT, PIO_PERIPH_A},
+		{"SDMMC0_CD",   AT91C_PIN_PA(13), 0, PIO_DEFAULT, PIO_PERIPH_A},
+		{(char *)0, 0, 0, PIO_DEFAULT, PIO_PERIPH_A},
+	};
+#endif
+
+#ifdef CONFIG_SDHC1
+	const struct pio_desc sdmmc_pins[] = {
+		{"SDMMC1_DAT0",	AT91C_PIN_PA(18), 0, PIO_DEFAULT, PIO_PERIPH_E},
+		{"SDMMC1_DAT1",	AT91C_PIN_PA(19), 0, PIO_DEFAULT, PIO_PERIPH_E},
+		{"SDMMC1_DAT2",	AT91C_PIN_PA(20), 0, PIO_DEFAULT, PIO_PERIPH_E},
+		{"SDMMC1_DAT3",	AT91C_PIN_PA(21), 0, PIO_DEFAULT, PIO_PERIPH_E},
+		{"SDMMC1_CK",	AT91C_PIN_PA(22), 0, PIO_DEFAULT, PIO_PERIPH_E},
+		{"SDMMC1_CMD",	AT91C_PIN_PA(28), 0, PIO_DEFAULT, PIO_PERIPH_E},
+		{"SDMMC1_CD",	AT91C_PIN_PA(30), 0, PIO_DEFAULT, PIO_PERIPH_E},
+		{(char *)0, 0, 0, PIO_DEFAULT, PIO_PERIPH_A},
+	};
+#endif
+	/* First, print status of CAL for VDDSDMMC over-consumption errata */
+	pmc_enable_periph_clock(AT91C_ID_SDMMC0, PMC_PERIPH_CLK_DIVIDER_NA);
+	reg = readl(AT91C_BASE_SDHC0 + SDMMC_CALCR);
+	pmc_disable_periph_clock(AT91C_ID_SDMMC0);
+
+	if (reg & SDMMC_CALCR_ALWYSON)
+		dbg_info("SDHC: fix in place for SAMA5D2 SoM VDDSDMMC over-consumption errata\n");
+
+	/* Deal with usual SD/MCC peripheral init sequence */
+	pio_configure(sdmmc_pins);
+
+	pmc_enable_periph_clock(CONFIG_SYS_ID_SDHC, PMC_PERIPH_CLK_DIVIDER_NA);
+	pmc_enable_generic_clock(CONFIG_SYS_ID_SDHC,
+				 GCK_CSS_UPLL_CLK,
+				 ATMEL_SDHC_GCKDIV_VALUE);
+}
+#endif
diff -Naurw ./board/sama5d27_sd96/sama5d27_sd96.h ../git/board/sama5d27_sd96/sama5d27_sd96.h
--- ./board/sama5d27_sd96/sama5d27_sd96.h	1970-01-01 01:00:00.000000000 +0100
+++ ../git/board/sama5d27_sd96/sama5d27_sd96.h	2020-12-17 09:57:43.151013205 +0100
@@ -0,0 +1,111 @@
+/* ----------------------------------------------------------------------------
+ *         Microchip Microcontroller Software Support
+ * ----------------------------------------------------------------------------
+ * Copyright (c) 2017, Microchip Corporation
+ *
+ * All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions are met:
+ *
+ * - Redistributions of source code must retain the above copyright notice,
+ * this list of conditions and the disclaimer below.
+ *
+ * Microchip's name may not be used to endorse or promote products derived from
+ * this software without specific prior written permission.
+ *
+ * DISCLAIMER: THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR
+ * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
+ * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
+ * DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT, INDIRECT,
+ * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
+ * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
+ * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
+ * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
+ * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+#ifndef __SAMA5D2_SD96_H__
+#define __SAMA5D2_SD96_H__
+
+/*
+ * PMC Settings
+ */
+#define BOARD_MAINOSC		12000000
+
+/* PCK: 498MHz, MCK: 166MHz */
+#define BOARD_PLLA_MULA		82
+
+#define BOARD_PCK		((unsigned long)((BOARD_MAINOSC * (BOARD_PLLA_MULA + 1)) / 2))
+#define BOARD_MCK		((unsigned long)((BOARD_MAINOSC * (BOARD_PLLA_MULA + 1)) / 2 / 3))
+
+#define BOARD_CKGR_PLLA		(AT91C_CKGR_SRCA | AT91C_CKGR_OUTA_0)
+#define BOARD_PLLACOUNT		(0x3F << 8)
+#define BOARD_MULA		((AT91C_CKGR_MULA << 2) & (BOARD_PLLA_MULA << 18))
+#define BOARD_DIVA		(AT91C_CKGR_DIVA & 1)
+
+#define BOARD_PRESCALER_MAIN_CLOCK	(AT91C_PMC_PLLADIV2_2 \
+					| AT91C_PMC_MDIV_3 \
+					| AT91C_PMC_CSS_MAIN_CLK)
+
+#define BOARD_PRESCALER_PLLA		(AT91C_PMC_H32MXDIV_H32MXDIV2 \
+					| AT91C_PMC_PLLADIV2_2 \
+					| AT91C_PMC_MDIV_3 \
+					| AT91C_PMC_CSS_PLLA_CLK)
+
+#define MASTER_CLOCK		166000000
+
+#define PLLA_SETTINGS		(BOARD_CKGR_PLLA | \
+				BOARD_PLLACOUNT | \
+				BOARD_MULA | \
+				BOARD_DIVA)
+
+/*
+ * DBGU Settings
+ */
+#define	USART_BASE	AT91C_BASE_UART1
+#define CONFIG_SYS_DBGU_RXD_PIN		AT91C_PIN_PD(2)
+#define CONFIG_SYS_DBGU_TXD_PIN		AT91C_PIN_PD(3)
+#define CONFIG_SYS_DBGU_ID		AT91C_ID_UART1
+
+/*
+ * DataFlash Settings
+ */
+#define CONFIG_SYS_SPI_CLOCK	AT91C_SPI_CLK
+#define CONFIG_SYS_SPI_MODE	SPI_MODE3
+
+#if defined(CONFIG_QSPI)
+#if defined(CONFIG_QSPI_BUS0)
+#define	CONFIG_SYS_BASE_QSPI		AT91C_BASE_QSPI0
+#define	CONFIG_SYS_BASE_QSPI_MEM	AT91C_BASE_QSPI0_MEM
+#define	CONFIG_SYS_ID_QSPI		AT91C_ID_QSPI0
+
+#elif defined(CONFIG_QSPI_BUS1)
+#define	CONFIG_SYS_BASE_QSPI		AT91C_BASE_QSPI1
+#define	CONFIG_SYS_BASE_QSPI_MEM	AT91C_BASE_QSPI1_MEM
+#define	CONFIG_SYS_ID_QSPI		AT91C_ID_QSPI1
+#endif
+
+#endif
+
+/*
+ * SDHC Settings
+ */
+#ifdef CONFIG_SDHC0
+#define CONFIG_SYS_BASE_SDHC	AT91C_BASE_SDHC0
+#define CONFIG_SYS_ID_SDHC	AT91C_ID_SDMMC0
+#endif
+
+#ifdef CONFIG_SDHC1
+#define CONFIG_SYS_BASE_SDHC	AT91C_BASE_SDHC1
+#define CONFIG_SYS_ID_SDHC	AT91C_ID_SDMMC1
+#endif
+
+/*
+ * LEDs
+ */
+#define CONFIG_SYS_LED_RED_PIN      AT91C_PIN_PA(10)
+#define CONFIG_SYS_LED_GREEN_PIN    AT91C_PIN_PB(1)
+#define CONFIG_SYS_LED_BLUE_PIN     AT91C_PIN_PA(31)
+
+#endif
diff -Naurw ./board/sama5d27_sd96/sama5d27_sd96qspi_linux_image_dt_defconfig ../git/board/sama5d27_sd96/sama5d27_sd96qspi_linux_image_dt_defconfig
--- ./board/sama5d27_sd96/sama5d27_sd96qspi_linux_image_dt_defconfig	1970-01-01 01:00:00.000000000 +0100
+++ ../git/board/sama5d27_sd96/sama5d27_sd96qspi_linux_image_dt_defconfig	2020-12-17 09:57:43.151013205 +0100
@@ -0,0 +1,12 @@
+CONFIG_SAMA5D27_SD96=y
+CONFIG_RAM_128MB=y
+CONFIG_SPI_CLK=66000000
+CONFIG_QSPI=y
+CONFIG_QSPI_BUS1=y
+CONFIG_QSPI1_IOSET_2=y
+CONFIG_LOAD_LINUX=y
+CONFIG_OVERRIDE_CMDLINE=y
+CONFIG_IMG_ADDRESS="0xe0000"
+CONFIG_OF_OFFSET="0xc0000"
+CONFIG_DEBUG=y
+# CONFIG_ENTER_NWD is not set
diff -Naurw ./board/sama5d27_sd96/sama5d27_sd96qspi_uboot_defconfig ../git/board/sama5d27_sd96/sama5d27_sd96qspi_uboot_defconfig
--- ./board/sama5d27_sd96/sama5d27_sd96qspi_uboot_defconfig	1970-01-01 01:00:00.000000000 +0100
+++ ../git/board/sama5d27_sd96/sama5d27_sd96qspi_uboot_defconfig	2020-12-17 09:57:43.151013205 +0100
@@ -0,0 +1,10 @@
+CONFIG_SAMA5D27_SD96=y
+CONFIG_RAM_128MB=y
+CONFIG_SPI_CLK=66000000
+CONFIG_QSPI=y
+CONFIG_QSPI_BUS1=y
+CONFIG_QSPI1_IOSET_2=y
+CONFIG_IMG_ADDRESS="0x00040000"
+CONFIG_JUMP_ADDR="0x23f00000"
+CONFIG_DEBUG=y
+# CONFIG_ENTER_NWD is not set
diff -Naurw ./board/sama5d27_sd96/sama5d27_sd96sd_linux_image_dt_defconfig ../git/board/sama5d27_sd96/sama5d27_sd96sd_linux_image_dt_defconfig
--- ./board/sama5d27_sd96/sama5d27_sd96sd_linux_image_dt_defconfig	1970-01-01 01:00:00.000000000 +0100
+++ ../git/board/sama5d27_sd96/sama5d27_sd96sd_linux_image_dt_defconfig	2020-12-17 09:57:43.151013205 +0100
@@ -0,0 +1,8 @@
+CONFIG_SAMA5D27_SD96=y
+CONFIG_RAM_128MB=y
+CONFIG_SDCARD=y
+CONFIG_LOAD_LINUX=y
+CONFIG_OVERRIDE_CMDLINE=y
+CONFIG_IMAGE_NAME="zImage"
+CONFIG_DEBUG=y
+# CONFIG_ENTER_NWD is not set
diff -Naurw ./board/sama5d27_sd96/sama5d27_sd96sd_uboot_defconfig ../git/board/sama5d27_sd96/sama5d27_sd96sd_uboot_defconfig
--- ./board/sama5d27_sd96/sama5d27_sd96sd_uboot_defconfig	1970-01-01 01:00:00.000000000 +0100
+++ ../git/board/sama5d27_sd96/sama5d27_sd96sd_uboot_defconfig	2020-12-17 09:58:59.923293557 +0100
@@ -0,0 +1,7 @@
+CONFIG_SAMA5D27_SD96=y
+CONFIG_RAM_128MB=y
+CONFIG_SDCARD=y
+CONFIG_SDHC1=y
+CONFIG_JUMP_ADDR="0x23f00000"
+CONFIG_DEBUG=y
+# CONFIG_ENTER_NWD is not set
diff -Naurw ./Config.in.kernel ../git/Config.in.kernel
--- ./Config.in.kernel	2020-12-17 09:57:56.502365343 +0100
+++ ../git/Config.in.kernel	2020-12-17 09:57:43.151013205 +0100
@@ -32,6 +32,7 @@
 source "board/sama5d2_ptc_ek/Config.in.linux_arg"
 source "board/sama5d2_xplained/Config.in.linux_arg"
 source "board/sama5d2_icp/Config.in.linux_arg"
+source "board/sama5d27_sd96/Config.in.linux_arg"
 source "board/sama5d27_som1_ek/Config.in.linux_arg"
 source "board/sama5d27_wlsom1_ek/Config.in.linux_arg"
 source "board/sama7g5ek/Config.in.linux_arg"
diff -Naurw ./include/board.h ../git/include/board.h
--- ./include/board.h	2020-12-17 09:57:56.514364761 +0100
+++ ../git/include/board.h	2020-12-17 09:57:43.151013205 +0100
@@ -108,6 +108,10 @@
 #include "sama5d2_xplained.h"
 #endif
 
+#ifdef CONFIG_SAMA5D27_SD96
+#include "sama5d27_sd96.h"
+#endif
+
 #ifdef CONFIG_SAMA5D27_SOM1_EK
 #include "sama5d27_som1_ek.h"
 #endif
